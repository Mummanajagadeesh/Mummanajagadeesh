name: Update README with Repo Cards

on:
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * *"  # Daily at 12:00 UTC

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Fetch all repositories (public + private)
        env:
          GH_TOKEN: ${{ secrets.PRIVATE_GH_TOKEN }}
        run: |
          curl -s -H "Authorization: Bearer $GH_TOKEN" \
            "https://api.github.com/user/repos?per_page=100&affiliation=owner" > all_repos.json

      - name: Generate repo cards
        env:
          GH_TOKEN: ${{ secrets.PRIVATE_GH_TOKEN }}
        run: |
          mkdir -p repos
          echo "<!--START:REPO_CARDS-->" > insert.txt

          # Download GitHub language colors
          curl -sL "https://raw.githubusercontent.com/ozh/github-colors/master/colors.json" -o colors.json

          get_color() {
            jq -r --arg lang "$1" '.[$lang].color // "#cccccc"' colors.json
          }

          generate_svg() {
            THEME=$1
            FILE=$2
            BG_COLOR=$3
            BORDER_COLOR=$4
            NAME_COLOR=$5
            DESC_COLOR=$6
            META_COLOR=$7
            BADGE_FILL=$8
            BADGE_STROKE=$9

            DESC_LINES=$(echo "$DESC" | fold -s -w 45)
            DESC_LINE_COUNT=$(echo "$DESC_LINES" | wc -l)
            LANG_COUNT=$(echo "$LANGS" | wc -w)
            LANG_ROWS=$(( (LANG_COUNT + 3) / 4 ))
            BASE_HEIGHT=140
            DESC_HEIGHT=$(( (DESC_LINE_COUNT - 1) * 18 ))
            LANG_HEIGHT=$(( (LANG_ROWS - 1) * 22 ))
            HEIGHT=$((BASE_HEIGHT + DESC_HEIGHT + LANG_HEIGHT))

            echo "<svg width=\"500\" height=\"$HEIGHT\" viewBox=\"0 0 500 $HEIGHT\" xmlns=\"http://www.w3.org/2000/svg\">" > $FILE
            echo "  <style>" >> $FILE
            echo "    .card-bg { fill: $BG_COLOR; stroke: $BORDER_COLOR; stroke-width: 1; }" >> $FILE
            echo "    .repo-name { font: bold 16px sans-serif; fill: $NAME_COLOR; cursor: pointer; text-decoration: underline; }" >> $FILE
            echo "    .repo-desc { font: 14px sans-serif; fill: $DESC_COLOR; }" >> $FILE
            echo "    .meta { font: 12px sans-serif; fill: $META_COLOR; }" >> $FILE
            echo "    .badge { font: 11px sans-serif; fill: $META_COLOR; }" >> $FILE
            echo "    .lang-dot { r: 5; }" >> $FILE
            echo "  </style>" >> $FILE
            echo "  <rect class=\"card-bg\" x=\"0\" y=\"0\" width=\"500\" height=\"$HEIGHT\" rx=\"12\" ry=\"12\" />" >> $FILE
            echo "  <a href=\"https://github.com/Mummanajagadeesh/$NAME\" target=\"_blank\">" >> $FILE
            echo "    <text x=\"16\" y=\"30\" class=\"repo-name\">$NAME</text>" >> $FILE
            echo "  </a>" >> $FILE

            if [ "$PRIVATE" = "true" ]; then
              echo "  <rect x=\"420\" y=\"16\" rx=\"4\" ry=\"4\" width=\"65\" height=\"18\" fill=\"$BADGE_FILL\" stroke=\"$BADGE_STROKE\" />" >> $FILE
              echo "  <text x=\"428\" y=\"29\" class=\"badge\">Private</text>" >> $FILE
            else
              echo "  <rect x=\"430\" y=\"16\" rx=\"4\" ry=\"4\" width=\"55\" height=\"18\" fill=\"$BADGE_FILL\" stroke=\"$BADGE_STROKE\" />" >> $FILE
              echo "  <text x=\"438\" y=\"29\" class=\"badge\">Public</text>" >> $FILE
            fi

            echo "  <text x=\"16\" y=\"55\" class=\"repo-desc\">" >> $FILE
            LINE_Y=0
            while read -r LINE; do
              echo "    <tspan x=\"16\" dy=\"${LINE_Y}\">$LINE</tspan>" >> $FILE
              LINE_Y=18
            done <<< "$DESC_LINES"
            echo "  </text>" >> $FILE

            LANG_START_Y=$((55 + DESC_LINE_COUNT * 18 + 10))
            X=16
            COUNT=0
            ROW=0

            for LANG in $LANGS; do
              COLOR=$(get_color "$LANG")
              CX=$X
              CY=$((LANG_START_Y + ROW * 22))
              TX=$((CX + 10))
              TY=$((CY + 4))

              echo "  <circle class=\"lang-dot\" cx=\"$CX\" cy=\"$CY\" fill=\"$COLOR\" />" >> $FILE
              echo "  <text x=\"$TX\" y=\"$TY\" class=\"meta\">$LANG</text>" >> $FILE

              X=$((X + 110))
              COUNT=$((COUNT + 1))
              if [ $COUNT -eq 4 ]; then
                X=16
                ROW=$((ROW + 1))
                COUNT=0
              fi
            done

            STAR_Y=$((LANG_START_Y + LANG_ROWS * 22 + 5))
            echo "  <text x=\"484\" y=\"$STAR_Y\" text-anchor=\"end\" class=\"meta\">‚≠ê $STARS star(s)</text>" >> $FILE
            echo "</svg>" >> $FILE
          }

          for row in $(jq -r '.[] | @base64' all_repos.json); do
            _jq() {
              echo "$row" | base64 --decode | jq -r "$1"
            }

            NAME=$(_jq '.name')
            DESC=$(_jq '.description')
            PRIVATE=$(_jq '.private')
            STARS=$(_jq '.stargazers_count')
            [ "$DESC" = "null" ] && DESC="No description provided"

            LANGS=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
              "https://api.github.com/repos/Mummanajagadeesh/$NAME/languages" | jq -r 'keys_unsorted[]')

            generate_svg light "repos/${NAME,,}-light.svg" "#fff" "#1f6feb" "#0969da" "#57606a" "#57606a" "#ddf4ff" "#0969da"
            generate_svg dark "repos/${NAME,,}-dark.svg" "#0d1117" "#1f6feb" "#58a6ff" "#8b949e" "#8b949e" "#1f6feb1a" "#388bfd"

            echo "" >> insert.txt
            echo "<a href=\"https://github.com/Mummanajagadeesh#gh-light-mode-only\">" >> insert.txt
            echo "  <img src=\"./repos/${NAME,,}-light.svg#gh-light-mode-only\" alt=\"$NAME (light mode)\" />" >> insert.txt
            echo "</a>" >> insert.txt
            echo "<a href=\"https://github.com/Mummanajagadeesh#gh-dark-mode-only\">" >> insert.txt
            echo "  <img src=\"./repos/${NAME,,}-dark.svg#gh-dark-mode-only\" alt=\"$NAME (dark mode)\" />" >> insert.txt
            echo "</a>" >> insert.txt
            echo "" >> insert.txt

            sed -i "/<!--START-REPO-CARD:$NAME-->/,/<!--END-REPO-CARD:$NAME-->/c\\
          <!--START-REPO-CARD:$NAME-->\n\
          <a href=\"https://github.com/Mummanajagadeesh#gh-light-mode-only\">\n\
            <img src=\"./repos/${NAME,,}-light.svg#gh-light-mode-only\" alt=\"$NAME (light mode)\" />\n\
          </a>\n\
          <a href=\"https://github.com/Mummanajagadeesh#gh-dark-mode-only\">\n\
            <img src=\"./repos/${NAME,,}-dark.svg#gh-dark-mode-only\" alt=\"$NAME (dark mode)\" />\n\
          </a>\n\
          <!--END-REPO-CARD:$NAME-->" README.md
          done

          echo "<!--END:REPO_CARDS-->" >> insert.txt

      - name: Update README.md
        run: |
          awk '/<!--START:REPO_CARDS-->/ {print; system("tail -n +2 insert.txt | head -n -1"); found=1; next}
               /<!--END:REPO_CARDS-->/ {found=0}
               !found {print}' README.md > README.tmp
          mv README.tmp README.md

      - name: Commit and push changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add README.md repos/
          git commit -m "Update README with dynamic repo cards" || echo "No changes to commit"
          git push
