name: Update README with Repo Cards

on:
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * *"

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get install -y jq

      - name: Extract repo names from README
        id: extract
        run: |
          grep -oP '(?<=<!--START:REPO-CARD:).*?(?=-->)' README.md | sort -u > repos.txt
          echo "repos=$(paste -sd ',' repos.txt)" >> "$GITHUB_OUTPUT"

      - name: Fetch metadata and generate SVGs
        env:
          GH_TOKEN: ${{ secrets.PRIVATE_GH_TOKEN }}
        run: |
          mkdir -p repos

          while IFS= read -r REPO_NAME; do
            echo "Processing $REPO_NAME..."
            QUERY=$(jq -n --arg name "$REPO_NAME" \
              '{"query":"query { user(login: \"Mummanajagadeesh\") { repository(name: \($name)) { name description isPrivate stargazers { totalCount } languages(first: 10, orderBy: {field: SIZE, direction: DESC}) { edges { size node { name } } } } } }"}')

            RESP=$(curl -s -H "Authorization: bearer $GH_TOKEN" -H "Content-Type: application/json" \
              -X POST -d "$QUERY" https://api.github.com/graphql)

            echo "$RESP" > "$REPO_NAME.json"

            NAME=$(jq -r '.data.user.repository.name' "$REPO_NAME.json")
            DESC=$(jq -r '.data.user.repository.description // "No description provided"' "$REPO_NAME.json")
            STARS=$(jq -r '.data.user.repository.stargazers.totalCount' "$REPO_NAME.json")
            PRIVATE=$(jq -r '.data.user.repository.isPrivate' "$REPO_NAME.json")

            PRIV_TEXT=""
            if [ "$PRIVATE" = "true" ]; then PRIV_TEXT="üîí Private   "; fi

            LANGS=$(jq -r '
              .data.user.repository.languages.edges |
              map({lang: .node.name, size: .size}) as $langs |
              ($langs | map(.size) | add) as $total |
              ($langs | map("\(.lang) " + ((.size * 100 / $total) | floor | tostring) + "%"))[0:3] |
              join("   ")
            ' "$REPO_NAME.json")

            for MODE in light dark; do
              if [ "$MODE" = "light" ]; then
                BG="#f9f9f9"; STROKE="#e1e4e8"
                TITLE="#0366d6"; DESC_C="#333"; STARS_C="#555"; LANG_C="#444"
              else
                BG="#0d1117"; STROKE="#30363d"
                TITLE="#58a6ff"; DESC_C="#c9d1d9"; STARS_C="#8b949e"; LANG_C="#999"
              fi

              cat <<EOF > "repos/${REPO_NAME}-${MODE}.svg"
<svg width="400" height="140" viewBox="0 0 400 140" xmlns="http://www.w3.org/2000/svg">
  <style>
    .title { font: bold 18px sans-serif; fill: ${TITLE}; }
    .desc { font: 14px sans-serif; fill: ${DESC_C}; }
    .meta { font: 12px sans-serif; fill: ${STARS_C}; }
    .langs { font: 12px monospace; fill: ${LANG_C}; }
    .bg { fill: ${BG}; stroke: ${STROKE}; stroke-width: 1; }
  </style>
  <rect class="bg" x="0" y="0" width="400" height="140" rx="10"/>
  <text x="20" y="30" class="title">${NAME}</text>
  <text x="20" y="55" class="desc">${DESC}</text>
  <text x="20" y="80" class="meta">${PRIV_TEXT}‚≠ê ${STARS} stars</text>
  <text x="20" y="105" class="langs">${LANGS}</text>
</svg>
EOF
            done

            # Build insert.txt for this block
            {
              echo "<!--START:REPO-CARD:$REPO_NAME-->"
              echo "<a href=\"https://github.com/Mummanajagadeesh/$REPO_NAME#gh-light-mode-only\">"
              echo "  <img src=\"./repos/${REPO_NAME}-light.svg#gh-light-mode-only\" alt=\"$REPO_NAME (light)\" />"
              echo "</a>"
              echo "<a href=\"https://github.com/Mummanajagadeesh/$REPO_NAME#gh-dark-mode-only\">"
              echo "  <img src=\"./repos/${REPO_NAME}-dark.svg#gh-dark-mode-only\" alt=\"$REPO_NAME (dark)\" />"
              echo "</a>"
              echo "<!--END:REPO-CARD:$REPO_NAME-->"
            } > "insert-$REPO_NAME.txt"

          done < repos.txt

      - name: Update README.md
        run: |
          cp README.md README.bak

          # Replace each block in README
          while IFS= read -r REPO_NAME; do
            awk -v name="$REPO_NAME" -v new="insert-$REPO_NAME.txt" '
              BEGIN { inside=0 }
              $0 ~ "<!--START:REPO-CARD:"name"-->"{ print; system("tail -n +2 "new" | head -n -1"); inside=1; next }
              $0 ~ "<!--END:REPO-CARD:"name"-->"{ inside=0 }
              !inside
            ' README.md > README.tmp
            mv README.tmp README.md
          done < repos.txt

      - name: Commit and push
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add README.md repos/*.svg
          git commit -m "Update repo cards (multi-repo, dual mode)" || echo "No changes to commit"
          git push
